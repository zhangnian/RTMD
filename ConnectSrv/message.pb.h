// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace RTMD {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_message_2eproto();
void protobuf_AssignDesc_message_2eproto();
void protobuf_ShutdownFile_message_2eproto();

class Message;

// ===================================================================

class Message : public ::google::protobuf::Message {
 public:
  Message();
  virtual ~Message();
  
  Message(const Message& from);
  
  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();
  
  void Swap(Message* other);
  
  // implements Message ----------------------------------------------
  
  Message* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 srcid = 2;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcidFieldNumber = 2;
  inline ::google::protobuf::int32 srcid() const;
  inline void set_srcid(::google::protobuf::int32 value);
  
  // optional int32 dstid = 3;
  inline bool has_dstid() const;
  inline void clear_dstid();
  static const int kDstidFieldNumber = 3;
  inline ::google::protobuf::int32 dstid() const;
  inline void set_dstid(::google::protobuf::int32 value);
  
  // optional int32 length = 4;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 4;
  inline ::google::protobuf::int32 length() const;
  inline void set_length(::google::protobuf::int32 value);
  
  // optional bytes content = 5;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 5;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // @@protoc_insertion_point(class_scope:RTMD.Message)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_dstid();
  inline void clear_has_dstid();
  inline void set_has_length();
  inline void clear_has_length();
  inline void set_has_content();
  inline void clear_has_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 srcid_;
  ::google::protobuf::int32 dstid_;
  ::google::protobuf::int32 length_;
  ::std::string* content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();
  
  void InitAsDefaultInstance();
  static Message* default_instance_;
};
// ===================================================================


// ===================================================================

// Message

// optional int32 type = 1;
inline bool Message::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Message::type() const {
  return type_;
}
inline void Message::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 srcid = 2;
inline bool Message::has_srcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message::set_has_srcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message::clear_srcid() {
  srcid_ = 0;
  clear_has_srcid();
}
inline ::google::protobuf::int32 Message::srcid() const {
  return srcid_;
}
inline void Message::set_srcid(::google::protobuf::int32 value) {
  set_has_srcid();
  srcid_ = value;
}

// optional int32 dstid = 3;
inline bool Message::has_dstid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Message::set_has_dstid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Message::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Message::clear_dstid() {
  dstid_ = 0;
  clear_has_dstid();
}
inline ::google::protobuf::int32 Message::dstid() const {
  return dstid_;
}
inline void Message::set_dstid(::google::protobuf::int32 value) {
  set_has_dstid();
  dstid_ = value;
}

// optional int32 length = 4;
inline bool Message::has_length() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Message::set_has_length() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Message::clear_has_length() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Message::clear_length() {
  length_ = 0;
  clear_has_length();
}
inline ::google::protobuf::int32 Message::length() const {
  return length_;
}
inline void Message::set_length(::google::protobuf::int32 value) {
  set_has_length();
  length_ = value;
}

// optional bytes content = 5;
inline bool Message::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Message::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Message::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Message::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& Message::content() const {
  return *content_;
}
inline void Message::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void Message::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void Message::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Message::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* Message::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace RTMD

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
